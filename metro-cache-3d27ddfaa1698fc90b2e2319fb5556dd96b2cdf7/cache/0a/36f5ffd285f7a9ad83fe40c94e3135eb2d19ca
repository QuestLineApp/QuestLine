__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/scooter/Documents/school/software-engineering/QuestLine/Screens/NotificationsScreen.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _nativeBase = require(_dependencyMap[3], "native-base");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    NotificationsScreen: {
      displayName: "NotificationsScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/scooter/Documents/school/software-engineering/QuestLine/Screens/NotificationsScreen.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var NotificationsScreen = _wrapComponent("NotificationsScreen")(function (_Component) {
    _inherits(NotificationsScreen, _Component);

    function NotificationsScreen() {
      _classCallCheck(this, NotificationsScreen);

      return _possibleConstructorReturn(this, (NotificationsScreen.__proto__ || Object.getPrototypeOf(NotificationsScreen)).apply(this, arguments));
    }

    _createClass(NotificationsScreen, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react3.default.createElement(
          _nativeBase.Container,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 9
            }
          },
          _react3.default.createElement(
            _nativeBase.Header,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 10
              }
            },
            _react3.default.createElement(
              _nativeBase.Left,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 11
                }
              },
              _react3.default.createElement(
                _nativeBase.Button,
                {
                  transparent: true,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 12
                  }
                },
                _react3.default.createElement(_nativeBase.Icon, {
                  name: "md-menu",
                  onPress: function onPress() {
                    return _this2.props.navigation.navigate('DrawerOpen');
                  },
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 13
                  }
                })
              )
            )
          ),
          _react3.default.createElement(
            _nativeBase.Content,
            {
              contentContainerStyle: {
                flex: 1,
                alignItems: 'center',
                justifyContent: 'center'
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 17
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 22
                }
              },
              " Notifications "
            )
          )
        );
      }
    }]);

    return NotificationsScreen;
  }(_react2.Component));

  exports.default = NotificationsScreen;
});